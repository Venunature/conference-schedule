# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Test run
      run: mvn test
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Setup AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Upload JAR to S3
      run: |
          aws s3 cp target/${{ vars.JAR_NAME }} s3://${{ vars.S3_LIB_BKT }}/${{ vars.JAR_S3_KEY }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Initialize Terraform
    - name: Initialize Terraform
      working-directory: ./terraform
      run: terraform init
      env:
        TF_VAR_lib_bucket: ${{ vars.S3_LIB_BKT }}
        TF_VAR_jar_s3_key: ${{ vars.JAR_S3_KEY }}
        TF_VAR_lambda_function_name: ${{ vars.LAMBA_FUNCTION_NAME }}
        TF_VAR_lambda_handler: ${{ vars.LAMBDA_HANDLER }}

    # Validate Terraform configuration
    - name: Validate Terraform
      working-directory: ./terraform
      run: terraform validate
      env:
        TF_VAR_lib_bucket: ${{ vars.S3_LIB_BKT }}
        TF_VAR_jar_s3_key: ${{ vars.JAR_S3_KEY }}
        TF_VAR_lambda_function_name: ${{ vars.LAMBA_FUNCTION_NAME }}
        TF_VAR_lambda_handler: ${{ vars.LAMBDA_HANDLER }}

    # Plan Terraform deployment
    - name: Plan Terraform
      working-directory: ./terraform
      run: terraform plan
      env:
        TF_VAR_lib_bucket: ${{ vars.S3_LIB_BKT }}
        TF_VAR_jar_s3_key: ${{ vars.JAR_S3_KEY }}
        TF_VAR_lambda_function_name: ${{ vars.LAMBA_FUNCTION_NAME }}
        TF_VAR_lambda_handler: ${{ vars.LAMBDA_HANDLER }}

    # Apply Terraform deployment
    - name: Apply Terraform
      working-directory: ./terraform
      env:
        TF_VAR_lib_bucket: ${{ vars.S3_LIB_BKT }}
        TF_VAR_jar_s3_key: ${{ vars.JAR_S3_KEY }}
        TF_VAR_lambda_function_name: ${{ vars.LAMBA_FUNCTION_NAME }}
        TF_VAR_lambda_handler: ${{ vars.LAMBDA_HANDLER }}
      run: terraform apply -auto-approve
